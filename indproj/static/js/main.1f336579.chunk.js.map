{"version":3,"sources":["constant/config.js","components/About.js","components/Contact.js","components/Footer.js","components/Header.js","util/util.js","components/Guide.js","components/CreateTools.js","components/AlgInfo.js","components/AlgorithmSelector.js","components/Playback.js","components/CodeViewer.js","components/Graph.js","algorithms/index.js","algorithms/bfs.js","algorithms/dijkstra.js","components/GraphBuilder.js","App.js","index.js"],"names":["module","exports","developerUrl","developerWebsite","sourceCode","linkedin","minCharMessage","contactFormSuccess","contactFormFailure","contactFormError","emailMessage","formspreeEndpoint","invalidNodeError","speeds","contentChars","firstnameChars","surnameChars","defaultMatrixSize","graphStyles","selector","style","backgroundColor","borderWidth","height","width","label","color","textValign","fontSize","fontWeight","lineColor","textRotation","textOutlineOpacity","textOutlineColor","textOutlineWidth","textMarginY","targetArrowColor","graphLayout","name","idealEdgeLength","nodeRepulsion","about","props","id","Modal","Header","closeButton","className","Body","href","config","target","rel","icon","faGithub","faLinkedin","faAt","Footer","Button","onClick","onClose","emailRegex","RegExp","validateFirstname","firstname","length","validateSurname","surname","validateEmail","email","test","validateContent","content","postForm","a","requestOptions","method","headers","Accept","body","JSON","stringify","fetch","then","response","json","resp","ok","minMessages","limit","replace","Contact","state","firstnameMessage","surnameMessage","contentMessage","submitMessage","failedPost","posted","loading","customCallback","e","preventDefault","this","setState","validateForm","formPosted","value","firstnameValid","surnameValid","emailValid","contentValid","success","Form","Row","Group","as","Col","Label","Control","placeholder","onChange","onFirstnameChange","onSurnameChange","onEmailChange","rows","onContentChange","type","handleSubmit","disabled","Component","defaultProps","modalContent","modalShow","handleClose","Date","getFullYear","handleShow","size","show","onHide","darkMode","faMoon","faSun","effect","randomNumber","min","max","Math","floor","random","randomMatix","n","matrix","nNodes","i","push","j","buildGraphFromMatrix","weighted","newestPos","graphElements","data","position","source","guide","ensureInteger","v","CreateTools","error","maxNodes","setFunc","ignoreCheck","numNodes","newValue","invalidRandNodeError","setUpdated","updateMatrix","selectPreset","presets","currentPreset","map","Dropdown","Item","updatePreset","active","dest","updateSource","updateDest","weight","setWeight","Toggle","faCaretDown","Menu","renderPresetItems","genRandomMatix","faDice","FormControl","onChangeInput","InputGroup","faMapMarkerAlt","faSearch","faSync","faWeightHanging","readOnly","algInfo","algorithm","description","AlgorithmSelector","items","currentAlgorithm","selectAlgorithm","item","algorithms","algorithmObj","directed","setDirected","renderItems","faInfo","controlId","Check","checked","notDirectional","playback","curSpeed","setCurSpeed","playing","setPlaying","currentStep","nSteps","stepForward","stepBack","faCaretLeft","faCaretRight","step","parseFloat","toFixed","s","codeViewer","useState","expanded","setExpanded","code","Cytoscape","use","coseBilkent","graph","updated","setSourceSelected","setTargetSelected","addNode","removeNode","initialised","setInitialised","addEdge","removeEdge","updateWeight","sourceSelected","targetSelected","deleteGraphStyle","splice","addGraphStyle","colour","borderColor","selectors","startsWith","targetArrowShape","curveStyle","elements","layout","stylesheet","cy","makeLayout","run","fromJson","on","edge","group","unselect","node","pseudocode","GraphBuilder","graphMatrix","sourceNode","destNode","newestNodePos","graphInitialised","speed","steps","m","pos","Array","fill","weightValue","changePreset","changeAlgorithm","changeStep","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f336579.chunk.js","sourcesContent":["module.exports = {\n  developerUrl: 'https://github.com/AmazonPriime',\n  developerWebsite: 'https://amazonpriime.github.io/',\n  sourceCode: 'https://github.com/AmazonPriime/Algorithm-Animator',\n  linkedin: 'https://www.linkedin.com/in/luke-holland-/',\n  minCharMessage: 'Requires at least {min} characters',\n  contactFormSuccess: 'Message has been submitted!',\n  contactFormFailure: 'Unable to submit message.',\n  contactFormError: 'Errors in the form above.',\n  emailMessage: 'Must be in the form \\'name@example.com\\'',\n  formspreeEndpoint: 'https://formspree.io/f/xgerjqba',\n  invalidNodeError: 'Invalid node, graph only contains {numNodes} nodes!',\n  speeds: [0.25, 0.5, 0.75, 1.0, 1.25, 1.5, 1.75, 2.0],\n  contentChars: 10,\n  firstnameChars: 2,\n  surnameChars: 2,\n  defaultMatrixSize: 7,\n  graphStyles: [\n    {\n      selector: 'node',\n      style: {\n        backgroundColor: 'white',\n        borderWidth: 1,\n        height: '1.25em',\n        width: '1.25em',\n        label: 'data(id)',\n        color: 'black',\n        textValign: 'center',\n        fontSize: '0.7em',\n        fontWeight: '200',\n      },\n    },\n    {\n      selector: 'edge',\n      style: {\n        width: 2,\n        lineColor: 'black',\n        label: 'data(label)',\n        textRotation: 'autorotate',\n        fontSize: '0.7em',\n        textOutlineOpacity: 1,\n        textOutlineColor: 'black',\n        textOutlineWidth: 1,\n        textMarginY: '0',\n        fontWeight: 'bold',\n        color: 'white',\n        targetArrowColor: 'black',\n      },\n    },\n  ],\n  graphLayout: {\n    name: 'cose-bilkent',\n    idealEdgeLength: 100,\n    nodeRepulsion: 1000,\n  },\n};\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons';\nimport { faAt } from '@fortawesome/free-solid-svg-icons';\nimport config from '../constant/config';\nimport './About.css';\n\nconst about = (props) => (\n  <div id=\"about\">\n    <Modal.Header closeButton>\n      <span className=\"heading\">\n        Algorithm Animator\n      </span>\n    </Modal.Header>\n    <Modal.Body>\n      <div className=\"section\" id=\"project\">\n        <span className=\"title\">University Project</span>\n        This project was completed as a Level 4 Individual Project which is a course\n        at the University of Glasgow which all Computer Science and Software Engineering\n        students are required to take in their 4th year of studies.\n      </div>\n      <div className=\"section\" id=\"motivation\">\n        <span className=\"title\">Motivation</span>\n        The motivation behind this website is help people who are in the process of\n        learning algorithms. The website will help students as it allows them to\n        animate and walk through the algorithm visually which often can make it easier\n        to learn and to gain a better understanding of a particular algorithm.\n      </div>\n      <div className=\"section\" id=\"contribute\">\n        <span className=\"title\">Contribute</span>\n        Since the website is an open source project, any can contribute to the codebase.\n        If you&apos;d like to contribute you can head to the source code linked below, if you\n        think an alogirithm is missing or want to fix a bug (or even just report them)\n        then you can check out the repository on GitHub!\n        <br />\n        <a\n          className=\"link\"\n          href={config.sourceCode}\n          target=\"__blank\"\n          rel=\"noopener noreferrer\"\n          id=\"sourceCode\"\n        >\n          Algorithm Animator Repository\n        </a>\n      </div>\n      <div className=\"section\" id=\"developer\">\n        <span className=\"title\">Developer</span>\n        My name is Luke Holland and I&apos;m a 4th year student at the University\n        of Glasgow studying towards an BSc in Software Engineering.\n        <div className=\"socials\">\n          <a\n            className=\"plainLink\"\n            href={config.developerUrl}\n            target=\"__blank\"\n            rel=\"noopener noreferrer\"\n            id=\"github\"\n          >\n            <FontAwesomeIcon icon={faGithub} />\n          </a>\n          <a\n            className=\"plainLink\"\n            href={config.linkedin}\n            target=\"__blank\"\n            rel=\"noopener noreferrer\"\n            id=\"linkedin\"\n          >\n            <FontAwesomeIcon icon={faLinkedin} />\n          </a>\n          <a\n            className=\"plainLink\"\n            href={config.developerWebsite}\n            target=\"__blank\"\n            rel=\"noopener noreferrer\"\n            id=\"website\"\n          >\n            <FontAwesomeIcon icon={faAt} />\n          </a>\n        </div>\n      </div>\n    </Modal.Body>\n    <Modal.Footer>\n      <Button\n        id=\"closeButton\"\n        className=\"button\"\n        onClick={() => props.onClose()}\n      >\n        Close\n      </Button>\n    </Modal.Footer>\n  </div>\n);\n\nexport default about;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport config from '../constant/config';\nimport './Contact.css';\n\nconst emailRegex = new RegExp('^(([^<>()[\\\\]\\\\.,;:\\\\s@\\\\\"]+(\\\\.[^<>()[\\\\]\\\\.,;:\\\\s@\\\\\"]+)*)|(\\\\\".+\\\\\"))@(([^<>()[\\\\]\\\\.,;:\\\\s@\\\\\"]+\\\\.)+[^<>()[\\\\]\\\\.,;:\\\\s@\\\\\"]{2,})$', 'i');\nconst validateFirstname = (firstname) => firstname.length >= config.firstnameChars;\nconst validateSurname = (surname) => surname.length >= config.surnameChars;\nconst validateEmail = (email) => emailRegex.test(email);\nconst validateContent = (content) => content.length >= config.contentChars;\n\nconst postForm = async (firstname, surname, email, content) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: { Accept: 'application/json' },\n    body: JSON.stringify({\n      firstname,\n      surname,\n      email,\n      content,\n    }),\n  };\n  const resp = await fetch(config.formspreeEndpoint, requestOptions)\n    .then((response) => response.json());\n  return resp.ok;\n};\n\nconst minMessages = (limit) => config.minCharMessage.replace('{min}', limit);\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstname: '',\n      firstnameMessage: '',\n      surname: '',\n      surnameMessage: '',\n      email: '',\n      emailMessage: '',\n      content: '',\n      contentMessage: '',\n      submitMessage: '',\n      failedPost: false,\n      posted: false,\n      loading: false,\n      customCallback: props.customCallback,\n    };\n  }\n\n  async handleSubmit(e, firstname, surname, email, content) {\n    e.preventDefault();\n    const { customCallback } = this.state;\n    this.setState({ loading: true });\n    if (this.validateForm(firstname, surname, email, content)) {\n      let formPosted = true;\n      if (!customCallback) {\n        formPosted = await postForm(firstname, surname, email, content);\n      } else {\n        customCallback();\n      }\n      this.setState({\n        submitMessage: formPosted ? config.contactFormSuccess : config.contactFormFailure,\n        emailMessage: '',\n        contentMessage: '',\n        failedPost: false,\n        posted: true,\n      });\n    } else {\n      this.setState({ submitMessage: config.contactFormError });\n    }\n    this.setState({ loading: false });\n  }\n\n  onFirstnameChange(value) {\n    const firstnameValid = validateFirstname(value);\n    this.setState({\n      firstname: value,\n      firstnameMessage: !firstnameValid ? minMessages(config.firstnameChars) : '',\n      submitMessage: !firstnameValid ? config.contactFormError : '',\n    });\n  }\n\n  onSurnameChange(value) {\n    const surnameValid = validateSurname(value);\n    this.setState({\n      surname: value,\n      surnameMessage: !surnameValid ? minMessages(config.surnameChars) : '',\n      submitMessage: !surnameValid ? config.contactFormError : '',\n    });\n  }\n\n  onEmailChange(value) {\n    const emailValid = validateEmail(value);\n    this.setState({\n      email: value,\n      emailMessage: !emailValid ? config.emailMessage : '',\n      submitMessage: !emailValid ? config.contactFormError : '',\n    });\n  }\n\n  onContentChange(value) {\n    const contentValid = validateContent(value);\n    this.setState({\n      content: value,\n      contentMessage: !contentValid ? minMessages(config.contentChars) : '',\n      submitMessage: !contentValid ? config.contactFormError : '',\n    });\n  }\n\n  validateForm(firstname, surname, email, content) {\n    const firstnameValid = validateFirstname(firstname);\n    const surnameValid = validateSurname(surname);\n    const emailValid = validateEmail(email);\n    const contentValid = validateContent(content);\n    this.setState({\n      firstnameMessage: !firstnameValid ? minMessages(config.firstnameChars) : '',\n      surnameMessage: !surnameValid ? minMessages(config.surnameChars) : '',\n      emailMessage: !emailValid ? config.emailMessage : '',\n      contentMessage: !contentValid ? minMessages(config.contentChars) : '',\n    });\n    return emailValid && contentValid;\n  }\n\n  render() {\n    const {\n      firstname,\n      firstnameMessage,\n      surname,\n      surnameMessage,\n      email,\n      emailMessage,\n      content,\n      contentMessage,\n      submitMessage,\n      failedPost,\n      posted,\n      loading,\n    } = this.state;\n\n    const { onClose } = this.props;\n\n    const success = !(firstnameMessage || surnameMessage || emailMessage || contentMessage);\n\n    return (\n      <div id=\"contact\">\n        <Modal.Header closeButton>\n          <span className=\"heading\">\n            Contact\n          </span>\n        </Modal.Header>\n        <Modal.Body>\n          <span className=\"info\">\n            Use the form below to send me an message, this can be anything about the website\n            a suggestion, bug report or anything else you can think of.\n          </span>\n          <Form>\n            <Row className=\"mb-3\">\n              <Form.Group as={Col}>\n                <Form.Label>First name</Form.Label>\n                <Form.Control\n                  id=\"firstname\"\n                  placeholder=\"First name\"\n                  onChange={(e) => this.onFirstnameChange(e.target.value)}\n                />\n                <span id=\"firstnameError\" className=\"error\">{ firstnameMessage }</span>\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label>Surname</Form.Label>\n                <Form.Control\n                  id=\"surname\"\n                  placeholder=\"Surname\"\n                  onChange={(e) => this.onSurnameChange(e.target.value)}\n                />\n                <span id=\"surnameError\" className=\"error\">{ surnameMessage }</span>\n              </Form.Group>\n            </Row>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                id=\"email\"\n                placeholder=\"name@example.com\"\n                onChange={(e) => this.onEmailChange(e.target.value)}\n              />\n              <span id=\"emailError\" className=\"error\">{ emailMessage }</span>\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Message</Form.Label>\n              <Form.Control\n                id=\"content\"\n                as=\"textarea\"\n                rows={3}\n                placeholder=\"Enter message here...\"\n                onChange={(e) => this.onContentChange(e.target.value)}\n              />\n              <span id=\"contentError\" className=\"error\">{ contentMessage }</span>\n            </Form.Group>\n            <div className=\"submit-container\">\n              { (!posted && !loading) && (\n                <Button\n                  id=\"submit\"\n                  className=\"button submit\"\n                  type=\"submit\"\n                  onClick={(e) => this.handleSubmit(e, firstname, surname, email, content)}\n                >\n                  Submit\n                </Button>\n              )}\n              { (posted || loading) && (\n                <Button\n                  id=\"submit\"\n                  className=\"button submit\"\n                  type=\"submit\"\n                  disabled\n                >\n                  { loading ? 'Loading...' : 'Submitted' }\n                </Button>\n              )}\n              <div id=\"status\" className=\"statusMessage\">\n                <span className={success && !failedPost ? 'success' : 'error'}>{ submitMessage }</span>\n              </div>\n            </div>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            id=\"closeButton\"\n            className=\"button\"\n            onClick={() => onClose()}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </div>\n    );\n  }\n}\n\nContact.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  customCallback: PropTypes.func,\n};\n\nContact.defaultProps = {\n  customCallback: null,\n};\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport About from './About';\nimport Contact from './Contact';\nimport config from '../constant/config';\nimport './Footer.css';\n\nclass Footer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalContent: '',\n      modalShow: false,\n    };\n  }\n\n  handleClose() {\n    this.setState({ modalShow: false });\n  }\n\n  handleShow(content) {\n    let modalContent;\n    if (content === 'about') {\n      modalContent = <About onClose={() => this.handleClose()} />;\n    } else if (content === 'contact') {\n      modalContent = <Contact onClose={() => this.handleClose()} />;\n    }\n    this.setState({\n      modalShow: true,\n      modalContent,\n    });\n  }\n\n  render() {\n    const { modalShow, modalContent } = this.state;\n    return (\n      <div className=\"footer\" id=\"footer\">\n        <a\n          className=\"developer\"\n          href={config.developerUrl}\n          target=\"__blank\"\n          rel=\"noopener noreferrer\"\n          id=\"developer\"\n        >\n          Luke Holland\n        </a>\n        { ' ' }\n        <span className=\"year\" id=\"year\">\n          2021-\n          { new Date().getFullYear() }\n        </span>\n        { ' ' }\n        <button\n          type=\"button\"\n          className=\"link\"\n          onClick={() => this.handleShow('about')}\n        >\n          About\n        </button>\n        { ' ' }\n        <button\n          type=\"button\"\n          className=\"link\"\n          onClick={() => this.handleShow('contact')}\n        >\n          Contact\n        </button>\n        { ' ' }\n        <a\n          className=\"link\"\n          href={config.sourceCode}\n          target=\"__blank\"\n          rel=\"noopener noreferrer\"\n          id=\"sourceCode\"\n        >\n          Source Code\n        </a>\n        <Modal\n          size=\"lg\"\n          show={modalShow}\n          onHide={() => this.handleClose()}\n        >\n          { modalContent }\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMoon, faSun } from '@fortawesome/free-solid-svg-icons';\nimport ReactTooltip from 'react-tooltip';\nimport Modal from 'react-bootstrap/Modal';\nimport About from './About';\nimport Contact from './Contact';\nimport config from '../constant/config';\nimport './Header.css';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      darkMode: false,\n      modalContent: '',\n      modalShow: false,\n    };\n  }\n\n  handleClose() {\n    this.setState({ modalShow: false });\n  }\n\n  handleShow(content) {\n    let modalContent;\n    if (content === 'about') {\n      modalContent = <About onClose={() => this.handleClose()} />;\n    } else if (content === 'contact') {\n      modalContent = <Contact onClose={() => this.handleClose()} />;\n    }\n    this.setState({\n      modalShow: true,\n      modalContent,\n    });\n  }\n\n  render() {\n    const { darkMode, modalShow, modalContent } = this.state;\n    return (\n      <div className=\"header\" id=\"header\">\n        <span className=\"title\">Algorithm Animator</span>\n        <button\n          type=\"button\"\n          className=\"link\"\n          onClick={() => this.handleShow('about')}\n          id=\"aboutButton\"\n        >\n          About\n        </button>\n        <button\n          type=\"button\"\n          className=\"link\"\n          onClick={() => this.handleShow('contact')}\n          id=\"contactButton\"\n        >\n          Contact\n        </button>\n        <a\n          className=\"link\"\n          href={config.sourceCode}\n          target=\"__blank\"\n          rel=\"noopener noreferrer\"\n          id=\"sourceCode\"\n        >\n          Source\n        </a>\n        <span data-tip data-for=\"notFunctional\" className=\"mode-icons\">\n          <FontAwesomeIcon\n            className={darkMode ? 'selected icon' : 'icon'}\n            icon={faMoon}\n            onClick={() => this.setState({ darkMode: true })}\n            id=\"darkModeBtn\"\n          />\n          <FontAwesomeIcon\n            className={darkMode ? 'icon' : 'selected icon'}\n            icon={faSun}\n            onClick={() => this.setState({ darkMode: false })}\n            id=\"lightModeBtn\"\n          />\n        </span>\n        <ReactTooltip id=\"notFunctional\" effect=\"solid\">\n          Feature in development\n        </ReactTooltip>\n        <div id=\"modal\">\n          <Modal\n            size=\"lg\"\n            show={modalShow}\n            onHide={() => this.handleClose()}\n          >\n            { modalContent }\n          </Modal>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","export function randomNumber(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nexport function randomMatix(n = -1) {\n  const matrix = [];\n  let nNodes = n;\n  if (nNodes === -1) {\n    nNodes = randomNumber(4, 15);\n  }\n  for (let i = 0; i < nNodes; i += 1) {\n    matrix.push([]);\n    for (let j = 0; j < nNodes; j += 1) {\n      if (i !== j) {\n        // 66% chance of edge\n        matrix[i].push(randomNumber(0, 3) % 2);\n      } else {\n        matrix[i].push(0);\n      }\n    }\n  }\n  return matrix;\n}\n\nexport function buildGraphFromMatrix(matrix, weighted = false, newestPos = null) {\n  const graphElements = [];\n  // add nodes to the graph\n  for (let i = 0; i < matrix.length; i += 1) {\n    if (i !== matrix.length - 1) {\n      graphElements.push({\n        data: {\n          id: `${i}`,\n          label: `${i}`,\n        },\n      });\n    } else {\n      graphElements.push({\n        data: {\n          id: `${i}`,\n          label: `${i}`,\n        },\n        position: newestPos,\n      });\n    }\n  }\n  // add edges to the graph\n  for (let i = 0; i < matrix.length; i += 1) {\n    for (let j = 0; j < matrix[i].length; j += 1) {\n      if (matrix[i][j] >= 1) {\n        graphElements.push({\n          data: {\n            source: `${i}`,\n            target: `${j}`,\n            label: weighted ? matrix[i][j] : '',\n          },\n        });\n      }\n    }\n  }\n  return graphElements;\n}\n\nexport default {\n  randomNumber,\n  randomMatix,\n  buildGraphFromMatrix,\n};\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport './Guide.css';\n\nconst guide = (props) => (\n  <div id=\"about\">\n    <Modal.Header closeButton>\n      Guide\n    </Modal.Header>\n    <Modal.Body>\n      Guide content will go here!\n    </Modal.Body>\n    <Modal.Footer>\n      <Button\n        id=\"closeButton\"\n        className=\"button\"\n        onClick={() => props.onClose()}\n      >\n        Close\n      </Button>\n    </Modal.Footer>\n  </div>\n);\n\nexport default guide;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Modal from 'react-bootstrap/Modal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faDice,\n  faMapMarkerAlt,\n  faSearch,\n  faCaretDown,\n  faSync,\n  faWeightHanging,\n} from '@fortawesome/free-solid-svg-icons';\nimport { randomMatix } from '../util/util';\nimport config from '../constant/config';\nimport './CreateTools.css';\nimport Guide from './Guide';\n\nconst ensureInteger = (v) => v.replace(/[^\\d]+/, '');\n\nclass CreateTools extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalShow: false,\n      error: '',\n      maxNodes: null,\n    };\n  }\n\n  handleClose() {\n    this.setState({ modalShow: false });\n  }\n\n  handleShow() {\n    this.setState({ modalShow: true });\n  }\n\n  onChangeInput(value, setFunc, ignoreCheck = false) {\n    const { numNodes } = this.props;\n    const newValue = ensureInteger(value);\n    setFunc(newValue);\n    let error;\n    if (!ignoreCheck) {\n      error = newValue >= numNodes ? config.invalidNodeError.replace('{numNodes}', numNodes) : '';\n    } else {\n      error = newValue === 0 ? config.invalidRandNodeError : '';\n    }\n    this.setState({ error });\n  }\n\n  genRandomMatix() {\n    const { maxNodes } = this.state;\n    const { setUpdated, updateMatrix } = this.props;\n    let matrix;\n    if (maxNodes > 0) {\n      matrix = randomMatix(maxNodes);\n    } else {\n      matrix = randomMatix();\n    }\n    setUpdated();\n    updateMatrix(matrix);\n  }\n\n  updatePreset(i) {\n    const { setUpdated, selectPreset } = this.props;\n    setUpdated();\n    selectPreset(i);\n  }\n\n  renderPresetItems() {\n    const { presets, currentPreset } = this.props;\n    return presets.map((v, i) => (\n      <Dropdown.Item\n        className=\"selector-item\"\n        onClick={() => this.updatePreset(i)}\n        active={v === currentPreset}\n      >\n        {v}\n      </Dropdown.Item>\n    ));\n  }\n\n  render() {\n    const { maxNodes, error, modalShow } = this.state;\n    const {\n      source,\n      dest,\n      updateSource,\n      updateDest,\n      setUpdated,\n      weight,\n      weighted,\n      setWeight,\n    } = this.props;\n\n    return (\n      <div id=\"tools\" className=\"tools\">\n        <div id=\"topRow\" className=\"top-row\">\n          <Button\n            id=\"guide\"\n            className=\"button\"\n            onClick={() => this.handleShow()}\n          >\n            Guide\n          </Button>\n          <Dropdown>\n            <Dropdown.Toggle\n              className=\"dropdown-toggle presets\"\n            >\n              Presets\n              { ' ' }\n              <FontAwesomeIcon\n                icon={faCaretDown}\n                className=\"icon\"\n              />\n            </Dropdown.Toggle>\n            <Dropdown.Menu\n              className=\"dropdown-menu\"\n            >\n              { this.renderPresetItems() }\n            </Dropdown.Menu>\n          </Dropdown>\n          <Button\n            id=\"random\"\n            className=\"button\"\n            onClick={() => this.genRandomMatix()}\n          >\n            <FontAwesomeIcon\n              icon={faDice}\n            />\n          </Button>\n          <FormControl\n            id=\"nodeCount\"\n            placeholder=\"#nodes\"\n            className=\"input-w-text number-input num-nodes\"\n            value={maxNodes}\n            onChange={\n              (e) => this.onChangeInput(\n                e.target.value,\n                (v) => this.setState({ maxNodes: v }),\n                true,\n              )\n            }\n          />\n        </div>\n        <div id=\"bottomRow\" className=\"bottom-row\">\n          <div>\n            <InputGroup>\n              <div className=\"input-icon\">\n                <FontAwesomeIcon\n                  id=\"sourceIcon\"\n                  icon={faMapMarkerAlt}\n                  className=\"icon\"\n                />\n              </div>\n              <FormControl\n                id=\"start\"\n                className=\"input-w-text number-input start\"\n                value={source}\n                onChange={(e) => this.onChangeInput(e.target.value, updateSource)}\n              />\n            </InputGroup>\n          </div>\n          <div>\n            <InputGroup>\n              <div className=\"input-icon\">\n                <FontAwesomeIcon\n                  id=\"searchIcon\"\n                  icon={faSearch}\n                  className=\"icon\"\n                />\n              </div>\n              <FormControl\n                id=\"search\"\n                className=\"input-w-text number-input search\"\n                value={dest}\n                onChange={(e) => this.onChangeInput(e.target.value, updateDest)}\n              />\n            </InputGroup>\n          </div>\n          <div>\n            <Button\n              id=\"refresh\"\n              className=\"button refresh\"\n              onClick={() => setUpdated()}\n            >\n              <FontAwesomeIcon\n                icon={faSync}\n              />\n            </Button>\n          </div>\n          <div>\n            <InputGroup className={weighted ? '' : 'input-disabled'}>\n              <div className=\"input-icon\">\n                <FontAwesomeIcon\n                  id=\"weightIcon\"\n                  icon={faWeightHanging}\n                  className=\"icon\"\n                />\n              </div>\n              <FormControl\n                id=\"weight\"\n                className=\"input-w-text number-input weight\"\n                value={weight}\n                onChange={(e) => this.onChangeInput(e.target.value, setWeight, true)}\n                readOnly={!weighted}\n              />\n            </InputGroup>\n          </div>\n        </div>\n        <span className=\"error\">\n          { error }\n        </span>\n        <Modal\n          size=\"lg\"\n          show={modalShow}\n          onHide={() => this.handleClose()}\n        >\n          <Guide onClose={() => this.handleClose()} />\n        </Modal>\n      </div>\n    );\n  }\n}\n\nCreateTools.propTypes = {\n  updateMatrix: PropTypes.func,\n  updateSource: PropTypes.func,\n  updateDest: PropTypes.func,\n  setUpdated: PropTypes.func,\n  setWeight: PropTypes.func,\n  selectPreset: PropTypes.func,\n  presets: PropTypes.arrayOf(PropTypes.object),\n  numNodes: PropTypes.number,\n  source: PropTypes.number,\n  dest: PropTypes.number,\n  weight: PropTypes.number,\n  weighted: PropTypes.bool,\n  currentPreset: PropTypes.string,\n};\n\nCreateTools.defaultProps = {\n  updateMatrix: () => {},\n  updateSource: () => {},\n  updateDest: () => {},\n  setUpdated: () => {},\n  setWeight: () => {},\n  selectPreset: () => {},\n  presets: [],\n  numNodes: 0,\n  source: 0,\n  dest: 0,\n  weight: 1,\n  weighted: false,\n  currentPreset: '',\n};\n\nexport default CreateTools;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport './AlgInfo.css';\n\nconst algInfo = (props) => {\n  const { algorithm } = props;\n  const { name, description } = algorithm;\n  return (\n    <div id=\"about\">\n      <Modal.Header closeButton>\n        { name }\n      </Modal.Header>\n      <Modal.Body>\n        { description }\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          id=\"closeButton\"\n          className=\"button\"\n          onClick={() => props.onClose()}\n        >\n          Close\n        </Button>\n      </Modal.Footer>\n    </div>\n  );\n};\n\nexport default algInfo;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport './AlgorithmSelector.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretDown, faInfo } from '@fortawesome/free-solid-svg-icons';\nimport AlgInfo from './AlgInfo';\n\nclass AlgorithmSelector extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalShow: false,\n    };\n  }\n\n  handleClose() {\n    this.setState({ modalShow: false });\n  }\n\n  handleShow() {\n    this.setState({ modalShow: true });\n  }\n\n  renderItems(items) {\n    const { currentAlgorithm, selectAlgorithm } = this.props;\n\n    return items.map((item, i) => (\n      <Dropdown.Item\n        className=\"selector-item\"\n        onClick={() => selectAlgorithm(i)}\n        active={item === currentAlgorithm}\n      >\n        { item }\n      </Dropdown.Item>\n    ));\n  }\n\n  render() {\n    const { modalShow } = this.state;\n    const {\n      currentAlgorithm,\n      algorithms,\n      algorithmObj,\n      directed,\n      setDirected,\n    } = this.props;\n\n    return (\n      <div id=\"algorithmSelector\" className=\"algorithm-selector\">\n        <Dropdown>\n          <Dropdown.Toggle\n            className=\"dropdown-toggle\"\n          >\n            { currentAlgorithm }\n            { ' ' }\n            <FontAwesomeIcon\n              icon={faCaretDown}\n              className=\"icon\"\n            />\n          </Dropdown.Toggle>\n          <Dropdown.Menu\n            className=\"dropdown-menu\"\n          >\n            { this.renderItems(algorithms) }\n          </Dropdown.Menu>\n        </Dropdown>\n        <Button\n          id=\"info\"\n          className=\"button\"\n          onClick={() => this.handleShow()}\n        >\n          <FontAwesomeIcon\n            icon={faInfo}\n          />\n        </Button>\n        <br />\n        <Form.Group\n          className=\"checkbox\"\n          controlId=\"formBasicCheckbox\"\n        >\n          <Form.Check\n            type=\"checkbox\"\n            label=\"directed\"\n            checked={directed}\n            disabled={algorithmObj.notDirectional}\n            onClick={() => setDirected(!directed)}\n          />\n        </Form.Group>\n        <Modal\n          size=\"lg\"\n          show={modalShow}\n          onHide={() => this.handleClose()}\n        >\n          <AlgInfo\n            algorithm={algorithmObj}\n            onClose={() => this.handleClose()}\n          />\n        </Modal>\n      </div>\n    );\n  }\n}\n\nAlgorithmSelector.propTypes = {\n  currentAlgorithm: PropTypes.string,\n  selectAlgorithm: PropTypes.func,\n  algorithms: PropTypes.arrayOf(PropTypes.object),\n  algorithmObj: PropTypes.objectOf(PropTypes.object),\n  directed: PropTypes.bool,\n  setDirected: PropTypes.func,\n};\n\nAlgorithmSelector.defaultProps = {\n  currentAlgorithm: '',\n  algorithms: [],\n  selectAlgorithm: () => {},\n  directed: false,\n  setDirected: () => {},\n  algorithmObj: null,\n};\n\nexport default AlgorithmSelector;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretRight, faCaretLeft, faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport config from '../constant/config';\nimport 'rc-slider/assets/index.css';\nimport './Playback.css';\n\nconst playback = (props) => {\n  const {\n    curSpeed,\n    setCurSpeed,\n    playing,\n    setPlaying,\n    currentStep,\n    nSteps,\n    stepForward,\n    stepBack,\n  } = props;\n\n  const renderSpeedOptions = () => config.speeds.map((s) => (\n    <Dropdown.Item\n      onClick={() => setCurSpeed(s)}\n      active={s === curSpeed}\n    >\n      { s.toFixed(2) }\n      x\n    </Dropdown.Item>\n  ));\n\n  return (\n    <div id=\"playback\" className=\"playback\">\n      <Button\n        id=\"stepBack\"\n        className=\"button\"\n        disabled={currentStep === 0 || nSteps === 0}\n        onClick={() => stepBack()}\n      >\n        <FontAwesomeIcon\n          icon={faCaretLeft}\n        />\n        { ' ' }\n        step\n      </Button>\n      <Button\n        id=\"playPause\"\n        className=\"button\"\n        onClick={() => setPlaying()}\n      >\n        { playing ? 'pause' : 'play' }\n      </Button>\n      <Button\n        id=\"stepForward\"\n        className=\"button\"\n        disabled={currentStep > nSteps - 1 || nSteps === 0}\n        onClick={() => stepForward()}\n      >\n        step\n        { ' ' }\n        <FontAwesomeIcon\n          icon={faCaretRight}\n        />\n      </Button>\n      <div id=\"speedControl\" className=\"speed-control\">\n        <input\n          type=\"range\"\n          min=\"0.1\"\n          max=\"2\"\n          step=\"0.05\"\n          value={curSpeed}\n          onChange={(e) => setCurSpeed(parseFloat(e.target.value))}\n        />\n        <Dropdown className=\"speed-dropdown\">\n          <Dropdown.Toggle className=\"speed-toggle-btn\">\n            { curSpeed.toFixed(2) }\n            { 'x ' }\n            <FontAwesomeIcon\n              icon={faCaretDown}\n            />\n          </Dropdown.Toggle>\n          <Dropdown.Menu className=\"speed-dropdown-menu\">\n            { renderSpeedOptions() }\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n    </div>\n  );\n};\n\nplayback.defaultProps = {\n  curSpeed: 1.0,\n};\n\nexport default playback;\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport './CodeViewer.css';\n\nconst codeViewer = (props) => {\n  const [expanded, setExpanded] = useState(false);\n  const { code } = props;\n\n  return (\n    <div className={expanded ? 'code-container expanded' : 'code-container'}>\n      <pre>\n        {code}\n      </pre>\n      <div className=\"toggle\">\n        <FontAwesomeIcon\n          icon={faCaretDown}\n          onClick={() => setExpanded(!expanded)}\n          className=\"code-icon\"\n        />\n      </div>\n    </div>\n  );\n};\n\ncodeViewer.defaultProps = {\n  code: '',\n};\n\nexport default codeViewer;\n\n// <div id=\"codeContainer\" className=\"code-container\">\n//   <div id=\"code\" className=\"code\">\n//     <pre>{ code }</pre>\n//   </div>\n// </div>\n","import React from 'react';\nimport CytoscapeComponent from 'react-cytoscapejs';\nimport Cytoscape from 'cytoscape';\nimport coseBilkent from 'cytoscape-cose-bilkent';\nimport config from '../constant/config';\nimport './Graph.css';\n\nCytoscape.use(coseBilkent);\n\nconst graph = (props) => {\n  const {\n    graphElements,\n    source,\n    dest,\n    updated,\n    setSourceSelected,\n    setTargetSelected,\n    setUpdated,\n    addNode,\n    removeNode,\n    initialised,\n    setInitialised,\n    addEdge,\n    removeEdge,\n    updateWeight,\n    directed,\n  } = props;\n\n  let {\n    sourceSelected,\n    targetSelected,\n  } = props;\n\n  const deleteGraphStyle = (i) => {\n    if (i !== -1) {\n      config.graphStyles.splice(i, 1);\n    }\n  };\n\n  const addGraphStyle = (id, colour) => {\n    config.graphStyles.push({\n      selector: `node[id = '${id}']`,\n      style: {\n        borderColor: colour,\n        fontWeight: 'bold',\n      },\n    });\n  };\n\n  const selectors = config.graphStyles.map((v) => v.selector);\n  for (let i = selectors.length - 1; i >= 0; i -= 1) {\n    if (selectors[i].startsWith('node[id = ')) {\n      deleteGraphStyle(i);\n    }\n  }\n\n  addGraphStyle(source, 'green');\n  addGraphStyle(dest, 'red');\n  addGraphStyle(sourceSelected, 'orange');\n  addGraphStyle(targetSelected, 'orange');\n\n  // update the graph if directed or not for the graph edge style\n  if (directed && config.graphStyles.length > 1) {\n    config.graphStyles[1].style.targetArrowShape = 'triangle';\n    config.graphStyles[1].style.curveStyle = 'bezier';\n  } else {\n    config.graphStyles[1].style.targetArrowShape = '';\n    config.graphStyles[1].style.curveStyle = '';\n  }\n\n  return (\n    <div className=\"graph-container\">\n      <CytoscapeComponent\n        elements={graphElements}\n        layout={config.graphLayout}\n        stylesheet={config.graphStyles}\n        className=\"graph\"\n        cy={(cy) => {\n          if (updated) {\n            const layout = cy.makeLayout(config.graphLayout);\n            layout.run();\n            setUpdated();\n          }\n\n          cy.style().fromJson(config.graphStyles);\n\n          if (!initialised) {\n            cy.on('dbltap', 'edge', (e) => {\n              const edge = e.target.json();\n              updateWeight(edge.data.id, edge.data.source, edge.data.target);\n            });\n\n            cy.on('dbltap', (e) => {\n              const { group } = e.target.json();\n              if (group !== 'edges' && group !== 'nodes') {\n                addNode(e.position);\n              }\n            });\n\n            cy.on('select', 'node', (e) => {\n              const id = e.target.id();\n              if (sourceSelected === id) {\n                sourceSelected = '';\n                setSourceSelected('');\n              } else if (targetSelected === id) {\n                targetSelected = '';\n                setTargetSelected('');\n              } else if (sourceSelected.length === 0) {\n                sourceSelected = id;\n                setSourceSelected(id);\n              } else if (targetSelected.length === 0) {\n                targetSelected = id;\n                setTargetSelected(id);\n              }\n              if (sourceSelected.length > 0 && targetSelected.length > 0) {\n                addEdge();\n                sourceSelected = '';\n                targetSelected = '';\n              }\n              e.target.unselect();\n            });\n\n            cy.on('taphold', 'edge', (e) => {\n              const edge = e.target.json();\n              removeEdge(edge.data.source, edge.data.target);\n            });\n\n            cy.on('taphold', 'node', (e) => {\n              const node = e.target.json();\n              if (node.data.id === targetSelected) {\n                targetSelected = '';\n                setTargetSelected('');\n              } else if (node.data.id === sourceSelected) {\n                sourceSelected = '';\n                setSourceSelected('');\n              }\n              removeNode(node.data.id);\n            });\n          }\n\n          if (!initialised) {\n            setInitialised();\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nexport default graph;\n","import bfs from './bfs';\nimport dijkstra from './dijkstra';\n\nexport default [\n  bfs,\n  dijkstra,\n];\n","export default {\n  name: 'Breadth First Search',\n  weighted: false,\n  notDirectional: false,\n  presets: [\n    {\n      name: 'BFS PRESET 1',\n      matrix: [\n        [0, 1, 0, 1], // eslint-disable-line\n        [0, 0, 0, 1], // eslint-disable-line\n        [0, 0, 0, 1], // eslint-disable-line\n        [1, 1, 1, 0], // eslint-disable-line\n      ],\n    },\n  ],\n  pseudocode: `procedure BFS(G, root) is\n    let Q be a queue\n    label root as explored\n    Q.enqueue(root)\n    while Q is not empty do\n        v := Q.dequeue()\n        if v is the goal then\n            return v\n        for all edges from v to w in G.adjacentEdges(v) do\n            if w is not labeled as explored then\n                label w as explored\n                Q.enqueue(w)`,\n  algorithm: () => {},\n  description: `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum congue urna at est viverra finibus. Proin a pulvinar orci, quis lacinia eros. In eget ornare odio, at vestibulum nulla. Integer feugiat augue ut neque accumsan, a cursus purus suscipit. Praesent at ullamcorper nibh, sed ullamcorper nibh. Donec finibus tortor non nisl fermentum, eu scelerisque elit consectetur. Fusce bibendum gravida risus, a malesuada massa euismod et. Nullam volutpat sed metus non pharetra. Donec egestas nisl in nunc feugiat egestas. Quisque commodo aliquet facilisis. Nulla facilisi. Suspendisse sit amet fringilla purus. Aliquam et ante ut sem sagittis rhoncus. Praesent ligula diam, consectetur vel egestas vel, elementum ac est. Nunc at felis nec velit fringilla ultrices. In ultrices tempus orci et blandit. Cras commodo quam hendrerit vulputate efficitur. Integer mattis dictum arcu. Sed vitae sem tempor, cursus arcu eu, maximus sem. Nunc dictum nisi a nisi gravida, in mollis odio consequat. Integer facilisis sit amet nunc quis consectetur.\n`,\n};\n","export default {\n  name: 'Dijkstra\\'s algorithm',\n  weighted: true,\n  notDirectional: false,\n  presets: [\n    {\n      name: 'DIJKSTRA PRESET 1',\n      matrix: [\n        [0, 1, 0], // eslint-disable-line\n        [1, 0, 1], // eslint-disable-line\n        [0, 0, 0], // eslint-disable-line\n      ],\n    },\n  ],\n  pseudocode: `function Dijkstra(Graph, source):\n    create vertex set Q\n    for each vertex v in Graph:\n        dist[v] ← INFINITY\n        prev[v] ← UNDEFINED\n        add v to Q\n    dist[source] ← 0\n    while Q is not empty:\n        u ← vertex in Q with min dist[u]\n        remove u from Q\n        for each neighbor v of u still in Q:\n            alt ← dist[u] + length(u, v)\n            if alt < dist[v]:\n                dist[v] ← alt\n                prev[v] ← u\n     return dist[], prev[]`,\n  algorithm: () => {},\n  description: `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum congue urna at est viverra finibus. Proin a pulvinar orci, quis lacinia eros. In eget ornare odio, at vestibulum nulla. Integer feugiat augue ut neque accumsan, a cursus purus suscipit. Praesent at ullamcorper nibh, sed ullamcorper nibh. Donec finibus tortor non nisl fermentum, eu scelerisque elit consectetur. Fusce bibendum gravida risus, a malesuada massa euismod et. Nullam volutpat sed metus non pharetra. Donec egestas nisl in nunc feugiat egestas. Quisque commodo aliquet facilisis. Nulla facilisi. Suspendisse sit amet fringilla purus. Aliquam et ante ut sem sagittis rhoncus. Praesent ligula diam, consectetur vel egestas vel, elementum ac est. Nunc at felis nec velit fringilla ultrices. In ultrices tempus orci et blandit. Cras commodo quam hendrerit vulputate efficitur. Integer mattis dictum arcu. Sed vitae sem tempor, cursus arcu eu, maximus sem. Nunc dictum nisi a nisi gravida, in mollis odio consequat. Integer facilisis sit amet nunc quis consectetur.\n`,\n};\n","import React, { Component } from 'react';\nimport CreateTools from './CreateTools';\nimport AlgorithmSelector from './AlgorithmSelector';\nimport Playback from './Playback';\nimport CodeViewer from './CodeViewer';\nimport Graph from './Graph';\nimport algorithms from '../algorithms';\nimport config from '../constant/config';\nimport { randomMatix, buildGraphFromMatrix } from '../util/util';\nimport './GraphBuilder.css';\n\nconst ensureInteger = (v) => v.replace(/[^\\d]+/, '');\n\nclass GraphBuilder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentAlgorithm: algorithms[0],\n      graphMatrix: randomMatix(config.defaultMatrixSize),\n      sourceNode: 0,\n      destNode: config.defaultMatrixSize - 1,\n      sourceSelected: '',\n      targetSelected: '',\n      weight: '',\n      updated: false,\n      newestNodePos: null,\n      currentPreset: '',\n      graphInitialised: false,\n      directed: false,\n      speed: 1, // current speed multiplier for the animation\n      playing: false, // whether or not the animation is paused\n      steps: [], // the steps for the animation\n      currentStep: 0, // the index for the current step\n    };\n  }\n\n  changeAlgorithm(i) {\n    if (i < algorithms.length && i !== -1) {\n      this.setState({\n        currentAlgorithm: algorithms[i],\n        currentPreset: '',\n      });\n    }\n  }\n\n  changePreset(i) {\n    const { currentAlgorithm } = this.state;\n\n    if (i < currentAlgorithm.presets.length && i !== -1) {\n      this.updateMatrix(currentAlgorithm.presets[i].matrix);\n      this.setState({ currentPreset: currentAlgorithm.presets[i].name });\n    }\n  }\n\n  updateMatrix(m) {\n    const { sourceNode, destNode } = this.state;\n\n    for (let i = 0; i < m.length; i += 1) {\n      if (m.length !== m[i].length) {\n        return;\n      }\n    }\n\n    this.setState({\n      graphMatrix: m,\n      sourceNode: sourceNode >= m.length ? 0 : sourceNode,\n      destNode: destNode >= m.length ? m.length - 1 : destNode,\n    });\n  }\n\n  addNode(pos = null) {\n    const { graphMatrix } = this.state;\n\n    for (let i = 0; i < graphMatrix.length; i += 1) {\n      graphMatrix[i].push(0);\n    }\n\n    graphMatrix.push(Array(graphMatrix.length + 1).fill(0));\n\n    if (pos) {\n      this.setState({ newestNodePos: pos });\n    }\n  }\n\n  removeNode(i) {\n    const { graphMatrix } = this.state;\n\n    if (!ensureInteger(i) || i.length === 0) {\n      return;\n    }\n\n    if (i >= graphMatrix.length) {\n      return;\n    }\n\n    // remove the node\n    graphMatrix.splice(i, 1);\n\n    // remove connections from other nodes\n    for (let j = 0; j < graphMatrix.length; j += 1) {\n      graphMatrix[j].splice(i, 1);\n    }\n\n    this.setState({\n      graphMatrix,\n      updated: true,\n    });\n  }\n\n  addEdge() {\n    const {\n      sourceSelected,\n      targetSelected,\n      graphMatrix,\n      weight,\n    } = this.state;\n\n    let weightValue = 1;\n\n    if (sourceSelected.length === 0 || targetSelected.length === 0) {\n      return;\n    }\n\n    if (!ensureInteger(sourceSelected) || !ensureInteger(targetSelected)) {\n      return;\n    }\n\n    if (ensureInteger(weight) && weight.length > 0) {\n      weightValue = weight;\n    }\n\n    if (sourceSelected >= graphMatrix.length || targetSelected >= graphMatrix.length) {\n      return;\n    }\n\n    // update to add edge between nodes and reset source/target selected\n    graphMatrix[sourceSelected][targetSelected] = weightValue;\n\n    this.setState({\n      sourceSelected: '',\n      targetSelected: '',\n    });\n  }\n\n  removeEdge(source, target) {\n    const { graphMatrix } = this.state;\n\n    if (!ensureInteger(source) || !ensureInteger(target)) {\n      return;\n    }\n\n    // update to remove edge between source/target\n    graphMatrix[source][target] = 0;\n\n    this.setState({ graphMatrix });\n  }\n\n  updateWeight(id, i, j) {\n    const { currentAlgorithm, weight, graphMatrix } = this.state;\n    const { weighted } = currentAlgorithm;\n\n    if (!weighted || i.length === 0 || j.length === 0 || weight.length === 0) {\n      return;\n    }\n\n    if (!ensureInteger(weight) || !ensureInteger(i) || !ensureInteger(j)) {\n      return;\n    }\n\n    // update the weight\n    graphMatrix[i][j] = weight;\n\n    this.setState({ graphMatrix });\n  }\n\n  changeStep(v) {\n    const { steps, currentStep } = this.state;\n    if (v === 1 && currentStep + 1 < steps.length - 1) {\n      this.setState({ currentStep: currentStep + 1 });\n    } else if (v === -1 && currentStep - 1 >= 0) {\n      this.setState({ currentStep: currentStep - 1 });\n    }\n  }\n\n  render() {\n    const {\n      graphMatrix,\n      currentAlgorithm,\n      sourceNode,\n      destNode,\n      updated,\n      currentPreset,\n      newestNodePos,\n      sourceSelected,\n      targetSelected,\n      graphInitialised,\n      weight,\n      directed,\n      speed,\n      playing,\n      currentStep,\n      steps,\n    } = this.state;\n\n    const { weighted } = currentAlgorithm;\n\n    return (\n      <div id=\"graphBuilder\" className=\"graph-builder\">\n        <div id=\"controls\" className=\"controls\">\n          <CreateTools\n            updateMatrix={(m) => this.updateMatrix(m)}\n            updateSource={(v) => this.setState({ sourceNode: v })}\n            updateDest={(v) => this.setState({ destNode: v })}\n            setUpdated={() => this.setState({ updated: true })}\n            setWeight={(v) => this.setState({ weight: v })}\n            selectPreset={(i) => this.changePreset(i)}\n            presets={currentAlgorithm.presets.map((v) => v.name)}\n            numNodes={graphMatrix.length}\n            source={sourceNode}\n            dest={destNode}\n            weight={weight}\n            weighted={weighted}\n            currentPreset={currentPreset}\n          />\n          <AlgorithmSelector\n            currentAlgorithm={currentAlgorithm.name}\n            algorithmObj={currentAlgorithm}\n            selectAlgorithm={(i) => this.changeAlgorithm(i)}\n            algorithms={algorithms.map((v) => v.name)}\n            setDirected={(v) => this.setState({ directed: v })}\n            directed={directed}\n          />\n          <Playback\n            curSpeed={speed}\n            setCurSpeed={(v) => this.setState({ speed: v })}\n            playing={playing}\n            setPlaying={() => this.setState({ playing: !playing })}\n            stepBack={() => this.changeStep(-1)}\n            stepForward={() => this.changeStep(1)}\n            currentStep={currentStep}\n            nSteps={steps.length}\n          />\n        </div>\n        <div className=\"graph-code-container\">\n          <Graph\n            setUpdated={() => this.setState({ updated: false })}\n            addNode={(pos) => this.addNode(pos)}\n            removeNode={(i) => this.removeNode(i)}\n            addEdge={() => this.addEdge()}\n            removeEdge={(source, target) => this.removeEdge(source, target)}\n            setSourceSelected={(id) => this.setState({ sourceSelected: id })}\n            setTargetSelected={(id) => this.setState({ targetSelected: id })}\n            setInitialised={() => this.setState({ graphInitialised: true })}\n            updateWeight={(id, i, j) => this.updateWeight(id, i, j)}\n            graphElements={buildGraphFromMatrix(graphMatrix, weighted, newestNodePos)}\n            source={sourceNode}\n            dest={destNode}\n            updated={updated}\n            sourceSelected={sourceSelected}\n            targetSelected={targetSelected}\n            initialised={graphInitialised}\n            directed={directed}\n          />\n          <CodeViewer code={currentAlgorithm.pseudocode} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GraphBuilder;\n","import React from 'react';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport GraphBuilder from './components/GraphBuilder';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <div className=\"content\">\n        <GraphBuilder />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}